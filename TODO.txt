TODO:

- test pebble inheritance loading + inclusion
- test freemarker inclusion

- test on windows
- test on mac

- refactor the whole rendering pipeline

- support a "documentation use case". WIP:
	- TBD:
		- tests
		- export a breadcrumb variable (should contain link + document title)
		- export global toc
		- export a start number variable for OL http://stackoverflow.com/a/779052 so the numbers are coherent
		  with the main ToC (/!\ some possible issue when there is no attached document with a directory)
		- add an option "ignore-depth-0: true/false" : if true it will not generate the file with depth 0 
	
    - see http://www.mkdocs.org/
	- we want to generate something like http://docs.jboss.org/seam/3/latest/reference/en-US/html/

- draft support

- archetype support (blog, doc, multi language standard website)


- refactor processing pipeline: add an additional stage. 
  Currently for each resource we output directly the result. Instead, it would be better to first generate
  a representation of the output tree, and then apply the processors.

- replace all syserr with java.util.logging : it's more sane if we want to use it as a lib...

- support
	- iterate-over-static-directory: a special case for paginate with a page size of 1 for static dir
		- page name is generated from the static file name
		- useful for generating gallery, where the user will paginate over the thumbnails (using a filter), and the iterate will generate the page containing the image

- check non thread safety of pegdown

- autoreload:
	- return list of changed files (for css only reload)

- override for in config file:
	- output dir
	- content
	- layout
	- static
	- locales
	
  they must be relative
  
- webserver:
	- instead of the no cache directive, add etag support


- cleanup:
	- LayoutBasePath.exist

- tests

- check and fix any inconsistencies created by the override-output-to-path property

- init command

- handle more common errors
- add help :D
- add documentation and examples 

- add a global view of the generated structure as a model parameter for the sitemap generation usecase

- for images, add metadata extraction support with iterate-over-static-directory (?) + thumbnail generation?:

<dependency>
    <groupId>com.drewnoakes</groupId>
    <artifactId>metadata-extractor</artifactId>
    <version>2.8.0</version>
</dependency>